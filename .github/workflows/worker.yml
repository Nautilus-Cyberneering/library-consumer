name: Worker

on:
  push:
    branches: [main]
  schedule:
    - cron: "0,10,20,30,40,50 * * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: "true"

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          fingerprint: "BD98B3F42545FF93EFF55F7F3F39AA1432CA6AD7"

      - name: Build the git-queue action
        run: |
          cd ./.github/actions/git-queue
          yarn install && yarn build

      - name: Get next job
        id: get-next-job
        uses: ./.github/actions/git-queue
        with:
          queue_name: "Library Update [library-aaa]"
          action: "next-job"

        # Begin mutual exclusion job

      - name: Parse job payload
        id: parse-payload
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          PAYLOAD="${{ steps.get-next-job.outputs.job_payload }}" ./scripts/parse-payload.sh

      - name: Update submodule
        id: update-submodule
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          cd libraries/aaa
          git fetch --all
          git checkout ${{ steps.parse-payload.outputs.current_ref }} && echo "::set-output name=updated::true"

      - name: Commit submodule update
        id: commit-submodule-update
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          git add libraries/aaa
          git commit -m "update library aaa to commit ${{ steps.parse-payload.outputs.current_ref }}"

      - name: Sync files from library
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        id: copy-library
        run: |
          rsync -a --delete --include="*/" --include="*.txt" --exclude="*" ./libraries/aaa/data/ ./libraries_mirror/aaa

      - name: Apply changes with a single commit
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        run: |
          git add libraries_mirror/aaa
          # commit only if there are changes
          git diff-index --quiet HEAD || git commit -m "library aaa synced to commit ${{ steps.parse-payload.outputs.current_ref }}"

        # End mutual exclusion job

      - name: Build job message payload
        id: build-payload
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          PAYLOAD="Successfully completed Library Update according to specification in job:
          https://github.com/josecelano/library-aaa/commit/${{ steps.parse-payload.outputs.current_ref }}"
          PAYLOAD="${PAYLOAD//'%'/'%25'}"
          PAYLOAD="${PAYLOAD//$'\n'/'%0A'}"
          PAYLOAD="${PAYLOAD//$'\r'/'%0D'}"
          echo "::set-output name=payload::$(echo "$PAYLOAD")"

      - name: Debug step outputs
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        run: |
          echo -e "previous_ref: ${{ steps.parse-payload.outputs.previous_ref }}"
          echo -e "current_ref: ${{ steps.parse-payload.outputs.current_ref }}"
          echo -e "updated: ${{ steps.update-submodule.outputs.updated }}"
          echo -e "built payload:\n${{ steps.build-payload.outputs.payload }}"

      - name: Mark job as done
        id: mark-job-as-done
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        uses: ./.github/actions/git-queue
        with:
          queue_name: "Library Update [library-aaa]"
          action: "mark-job-as-done"
          job_payload: ${{ steps.build-payload.outputs.payload }}

      - name: Show new git-queue commit
        if: ${{ steps.get-next-job.outputs.job_found == 'true' && steps.mark-job-as-done.outputs.job_created == 'true' }}
        run: |
          git show --show-signature ${{ steps.mark-job-as-done.outputs.job_commit }}

      - name: Push
        id: push
        if: ${{ steps.get-next-job.outputs.job_found == 'true' && steps.mark-job-as-done.outputs.job_created == 'true' }}
        shell: bash
        run: |
          git push
          
