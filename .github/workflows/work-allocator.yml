name: Work allocator

on:
  schedule:
    - cron: "0,10,20,30,40,50 * * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: issue-5-improve-claiming-lock-workflow
          fetch-depth: 0
          submodules: "true"

      - name: Get active lock
        id: get-active-lock
        shell: bash
        run: |
          ./scripts/get-active-lock.sh

      - name: Update submodule
        id: update-submodule
        if: ${{ steps.get-active-lock.outputs.active_lock == 'false' }}
        shell: bash
        run: |
          git submodule status libraries/aaa
          PREVIOUS_REF=$(git submodule status | awk '{print $1}' | sed 's/-//' | sed 's/+//' | sed 's/U//')
          echo "::set-output name=previous_ref::$PREVIOUS_REF"
          git submodule update --remote libraries/aaa
          CURRENT_REF=$(git submodule status | awk '{print $1}' | sed 's/-//' | sed 's/+//' | sed 's/U//')
          echo "::set-output name=current_ref::$CURRENT_REF"
          UPDATED=$(if [ "$PREVIOUS_REF" != "$CURRENT_REF" ]; then echo "true"; else echo "false"; fi)
          echo "::set-output name=updated::$UPDATED"

      - name: Debug step outputs
        if: ${{ steps.get-active-lock.outputs.active_lock == 'false' }}
        run: |
          echo -e "previous_ref: ${{ steps.update-submodule.outputs.previous_ref }}"
          echo -e "current_ref: ${{ steps.update-submodule.outputs.current_ref }}"
          echo -e "updated: ${{ steps.update-submodule.outputs.updated }}"

      - name: Set git config user to GitHub Bot
        if: ${{ steps.get-active-lock.outputs.active_lock == 'false' && steps.update-submodule.outputs.updated == 'true' }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Claim lock
        id: claim-lock
        if: ${{ steps.get-active-lock.outputs.active_lock == 'false' && steps.update-submodule.outputs.updated == 'true' }}
        shell: bash
        run: |
          COMMIT_MESSAGE="CLAIM LOCK: JOB: Library Update [library-aaa]
          \n
          Update Library Submodule and Process Changes:
          https://github.com/josecelano/library-aaa/commit/${{ steps.update-submodule.outputs.previous_ref }}
          ->
          https://github.com/josecelano/library-aaa/commit/${{ steps.update-submodule.outputs.current_ref }}
          \n
          PREVIOUS_REF=${{ steps.update-submodule.outputs.previous_ref }}
          CURRENT_REF=${{ steps.update-submodule.outputs.current_ref }}"
          git commit --allow-empty -m "$(echo -e "$COMMIT_MESSAGE")"
          git push
