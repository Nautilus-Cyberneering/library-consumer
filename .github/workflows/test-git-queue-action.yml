name: Test git-queue action

on:
  push:
    branches: [main, issue-*]
  pull_request:
    branches: [main, issue-*]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Show default runner node version
        run: node --version

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Set git config user to GitHub Bot
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install dependencies and build
        run: |
          cd ./.github/actions/git-queue
          yarn install && yarn build

      - name: Test
        run: |
          cd ./.github/actions/git-queue
          yarn test

      - name: Create job
        id: create-job
        uses: ./.github/actions/git-queue
        with:
          queue_name: "Library Update [library-aaa]"
          action: "create-job"
          job_payload: "job_payload"

      - name: Create job debug
        run: |
          echo -e "job_created: ${{ steps.create-job.outputs.job_created }}"
          echo -e "job_commit: ${{ steps.create-job.outputs.job_commit }}"

      - name: Mutual exclusion code
        if: ${{ steps.create-job.outputs.job_created == 'true' }}
        run: echo "Running the job that requires mutual exclusion"

      - name: Get next job
        id: get-next-job
        if: ${{ steps.create-job.outputs.job_created == 'true' }}
        uses: ./.github/actions/git-queue
        with:
          queue_name: "Library Update [library-aaa]"
          action: "next-job"

      - name: Get next job debug
        if: ${{ steps.create-job.outputs.job_created == 'true' }}
        run: |
          echo -e "job_payload: ${{ steps.get-next-job.outputs.job_payload }}"
          echo -e "job_commit: ${{ steps.get-next-job.outputs.job_commit }}"

      - name: Mark job as done
        id: mark-job-as-done
        if: ${{ steps.create-job.outputs.job_created == 'true' }}
        uses: ./.github/actions/git-queue
        with:
          queue_name: "Library Update [library-aaa]"
          action: "mark-job-as-done"
          job_payload: "job_payload-done"

      - name: Mark job as done debug
        if: ${{ steps.mark-job-as-done.outputs.job_created == 'true' }}
        run: |
          echo -e "job_created: ${{ steps.create-job.outputs.job_created }}"
          echo -e "job_commit: ${{ steps.mark-job-as-done.outputs.job_commit }}"

      - name: Git log new commits
        if: ${{ steps.mark-job-as-done.outputs.job_created == 'true' }}
        run: |
          git log ${{ steps.mark-job-as-done.outputs.job_commit }}..${{ steps.create-job.outputs.job_commit }}

